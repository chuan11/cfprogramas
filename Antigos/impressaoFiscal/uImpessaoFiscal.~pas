unit uImpessaoFiscal;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, DB, ADODB;

type
  TForm1 = class(TForm)
    conexao: TADOConnection;
    ADOTable1: TADOTable;
  procedure imprime();
    procedure FormCreate(Sender: TObject);
  
  private
    { Private declarations }
  public
    { Public declarations }
  end;



var
  Form1: TForm1;

implementation

{$R *.dfm}

   if (tbImpOco{ TForm1 }

procedure TForm1.imprime;
begin
.TableName <> '') then
      tbImpOco.Close();

   uUtil.getTable(tbImpOco, ' linha varchar(100)' );

   for l:=0 to memo1.Lines.Count -1 do
      tbImpOco.AppendRecord([memo1.lines[l]]);

   Param := TStringList.Create();
   if (cbLojas.ItemIndex >0) then
      Param.Add('Por loja.')
   else
      Param.Add('Por empregado.');

   Param.Add(dateToStr(DTI.Date) + ' até '+ dateToStr(DTF.Date) );

   if (Flatbatidas.Checked = true) then  Param.Add(Flatbatidas.Caption);
   if (FlatFaltas.Checked = true) then  Param.Add(FlatFaltas.Caption);
   if (FlatAtrasos.Checked = true) then  Param.Add(FlatAtrasos.Caption);
   while (Param.Count < 6) do param.Add('');

   if (cbShowOcoJust.Checked = true ) then
      Param.Add('Sim.')
   else
      Param.Add('Não.');
   fmMain.impressaoRave(tbImpOco, nil, 'rpPontoOcorrencias', Param);
   tbImpOco.Close();
end;

end;



procedure TForm1.FormCreate(Sender: TObject);
begin
   if (conexao.Connected = true) then
      conexao.Connected := false;
   conexao.ConnectionString := funcoes.getDadosConexaoUDL(extractFilePath(ParamStr(0)) +  'ConexaoAoWell.ini');
   conexao.Connected := true;
end;

end.
